
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Frame, StringVar, Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox
import controller as db_controller

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"./assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


def updateOrder():
    UpdateOrder()


class UpdateOrder(Frame):
    def __init__(self, parent, controller=None, *args, **kwargs):
        Frame.__init__(self, parent, *args, **kwargs)  
        self.parent = parent
        self.selected_r_id = self.parent.selected_rid

        self.data = {
            "id": StringVar(),
            "order": StringVar(),
        }
        self.canvas = Canvas(
            self,
            bg = "#FFFFFF",
            height = 470,
            width = 1001,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        self.canvas.place(x = 0, y = 0)
        self.canvas.create_rectangle(
            0.0,
            0.0,
            1001.0,
            470.0,
            fill="#1E2431",
            outline="")

        entry_image_1 = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        entry_bg_1 = self.canvas.create_image(
            269.0,
            191.0,
            image=entry_image_1
        )
        self.entry_1 = Text(
            self,
            bd=0,
            bg="#2A2F3A",
            fg="#FFFFFF",
            highlightthickness=0
        )
        self.entry_1.place(
            x=90.0,
            y=95.0,
            width=358.0,
            height=190.0
        )

        self.button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        button_1 = Button(
            self,
            image=self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=self.handle_update,
            relief="flat"
        )
        button_1.place(
            x=82.0,
            y=345.0,
            width=123.0,
            height=27.0
        )

        self.image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = self.canvas.create_image(
            480.0,
            169.0,
            image=self.image_image_1
        )

        self.id_text =self.canvas.create_text(
            111.0,
            470.0,
            anchor="nw",
            text="01",
            fill="#FFFFFF",
            font=("Montserrat SemiBold", 17 * -1)
        )

    def initialize(self):
        self.order_data = db_controller.get_orders()
        self.selected_r_id = self.parent.selected_rid

        # Filter out all reservations for selected id reservation
        if self.order_data is not None:
            self.selected_order_data = list(
                filter(lambda x: str(x[0]) == self.selected_r_id, self.order_data)
            )

            if self.selected_order_data:
                self.selected_order_data = self.selected_order_data[0]
                self.canvas.itemconfigure(self.id_text, text=self.selected_order_data[0])
                self.data["order"] = self.selected_order_data[2]
                self.entry_1.delete('1.0', 'end')
                self.entry_1.insert('1.0', self.data["order"])
                
    def handle_update(self):
        result = db_controller.update_order(
            self.selected_r_id,
            order=self.entry_1.get("1.0", "end-1c")

        )
        
     
        # Check if the update was successful
        if result:
            messagebox.showinfo("Success", "Details updated successfully")
            # Navigate back to the view window
            self.parent.navigate("view")
            # Refresh the view window to update the Treeview
            self.parent.windows.get("view").handle_refresh()
            # Clear all fields in the update frame
            self.entry_1.delete('1.0', 'end')
        else:
            error_message = "Failed to update details. Please check your input and try again."
            messagebox.showerror("Error", error_message)
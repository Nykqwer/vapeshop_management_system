
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Frame, Tk, Canvas, Entry, Text, Button, PhotoImage, Toplevel, messagebox
from build.main_window.dashboard.gui2 import Dashboard
from build.main_window.pos.gui5 import Pos
from build.main_window.orders.main import Orders
OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"./assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


def mainWindow():
    MainWindow()


class MainWindow(Toplevel):
    def __init__(self, *args, **kwargs):
        Toplevel.__init__(self, *args, **kwargs)
        self.title("Vape Shop Management System")
        self.geometry("1099x552")
        self.configure(bg = "#1E2431")


        canvas = Canvas(
            self,
            bg = "#1E2431",
            height = 552,
            width = 1099,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        self.image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(
            26.0,
            276.0,
            image=self.image_image_1
        )
        
        
 

        canvas.create_rectangle(
            75.0,
            67.0,
            1076.0,
            537.0,
            fill="#1E2431",
            outline="")

        self.button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        self.dash_btn = Button(
            self,
            image=self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.handle_btn_press(self.dash_btn,"dash"),
            relief="flat"
        )
        self.dash_btn.place(
            x=0.0,
            y=91.0,
            width=53.0,
            height=46.0
        )

        self.button_image_2 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        self.pos_btn = Button(
            self,
            image=self.button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.handle_btn_press(self.pos_btn,"pos"),
            relief="flat"
        )
        self.pos_btn.place(
            x=0.0,
            y=144.0,
            width=53.0,
            height=46.0
        )

        self.button_image_3 = PhotoImage(
            file=relative_to_assets("button_3.png"))
        self.order_btn = Button(
            self,
            image=self.button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.handle_btn_press(self.order_btn, "order"),
            relief="flat"
        )
        self.order_btn.place(
            x=0.0,
            y=197.0,
            width=53.0,
            height=46.0
        )

        self.button_image_4 = PhotoImage(
            file=relative_to_assets("button_4.png"))
        button_4 = Button(
            self,
            image=self.button_image_4,
            borderwidth=0,
            highlightthickness=0,
            command=self.logout,
            relief="flat"
        )
        button_4.place(
            x=0.0,
            y=506.0,
            width=53.0,
            height=46.0
        )

        self.image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        image_2 = canvas.create_image(
            541.0,
            36.0,
            image=self.image_image_2
        )

        self.windows = {
            "dash": Dashboard(self),
            "pos":  Pos(self),
            "order": Orders(self)
               
         }


        self.handle_btn_press(self.dash_btn, "dash")

        
        self.current_window.place(x=75, y=67, width=1001, height=470)
        self.current_window.tkraise()
        self.resizable(False, False)
      

    def place_sidebar_indicator(self):
        pass  

    def logout(self):
        confirm = messagebox.askyesno(
            "Confirm log-out", "Do you really want to log out?"
        )
        if confirm == True:
            user = None
            self.destroy()
            #LoginPota.gui5.loginPage()   
     
    def handle_btn_press(self, caller, name):
        # Place the sidebar on respective button


        # Hide all screens
        for window in self.windows.values():
            window.place_forget()

        # Set ucrrent Window
        self.current_window = self.windows.get(name)

        # Show the screen of the button pressed
        self.windows[name].place(x=75, y=67, width=1001, height=470)
     

    def handle_dashboard_refresh(self):
        # Recreate the dash window
        self.windows["menu"] = Dashboard(self)

